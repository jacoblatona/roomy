import { type NextPage } from "next";
import Head from "next/head";
import Layout from "../../components/Layout";
import { trpc } from "../../utils/trpc";
import { RoomShowcase } from "../../components/RoomShowcase";
import { Fragment, useEffect, useState } from "react";
import { Menu, Transition } from "@headlessui/react";
import { type IRoom } from "../../types";

const filters = [
  "All",
  "Technology",
  "Politics",
  "Sports",
  "Science",
  "Academics",
  "Entertainment",
  "Gaming",
];

const Rooms: NextPage = () => {
  const { data: rooms } = trpc.room.getAll.useQuery();
  const [filter, setFilter] = useState<string>("All");

  const [filteredList, setFilteredList] = useState<Array<IRoom> | undefined>(
    rooms
  );

  useEffect(() => {
    const list = rooms?.filter((room) => {
      return filter.toLowerCase() === "all"
        ? room
        : room.tags?.includes(filter);
    });

    setFilteredList(list);
  }, [filter, rooms]);

  return (
    <>
      <Head>
        <title>Roomy - Browse Rooms</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="mx-auto max-w-xs py-16 lg:container">
          <div className="flex flex-col items-center justify-between gap-y-5 lg:flex-row lg:gap-y-0">
            <h1 className="text-2xl text-white">Browse Rooms</h1>
            <div className="flex items-center gap-10">
              <span className="flex items-center gap-2 text-white">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth={1.5}
                  stroke="currentColor"
                  className="h-6 w-6"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 01-.659 1.591l-5.432 5.432a2.25 2.25 0 00-.659 1.591v2.927a2.25 2.25 0 01-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 00-.659-1.591L3.659 7.409A2.25 2.25 0 013 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0112 3z"
                  />
                </svg>
                Filter
              </span>
              <Menu as="div" className="relative inline-block text-left">
                <div>
                  <Menu.Button className="inline-flex w-full items-center justify-center gap-3 rounded-md bg-slate-700 px-4 py-2 text-sm font-medium text-white  focus:outline-none focus:ring-0">
                    {filter}
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      strokeWidth={1.5}
                      stroke="currentColor"
                      className="h-5 w-5"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        d="M19.5 8.25l-7.5 7.5-7.5-7.5"
                      />
                    </svg>
                  </Menu.Button>
                </div>

                <Transition
                  as={Fragment}
                  enter="transition ease-out duration-100"
                  enterFrom="transform opacity-0 scale-95"
                  enterTo="transform opacity-100 scale-100"
                  leave="transition ease-in duration-75"
                  leaveFrom="transform opacity-100 scale-100"
                  leaveTo="transform opacity-0 scale-95"
                >
                  <Menu.Items className="absolute right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-slate-700 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                    <div className="divide-y divide-slate-600">
                      {filters.map((filter, index) => (
                        <Menu.Item key={index}>
                          <span
                            onClick={() => setFilter(filter)}
                            className="block cursor-pointer px-4 py-3 text-sm text-white hover:bg-slate-500"
                          >
                            {filter}
                          </span>
                        </Menu.Item>
                      ))}
                    </div>
                  </Menu.Items>
                </Transition>
              </Menu>
            </div>
          </div>
          <ul
            role="list"
            className="mt-5 grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3"
          >
            {filteredList?.map((room) => (
              <RoomShowcase room={room} key={room.id} />
            ))}
          </ul>

          {filteredList?.length === 0 && (
            <div className="mt-5 flex items-center font-bold text-white">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth={1.5}
                stroke="currentColor"
                className="h-6 w-6"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z"
                />
              </svg>
              <span className="ml-3 mr-1">No Results found for </span>
              <span className="text-indigo-400">{filter}</span>
            </div>
          )}
        </div>
      </Layout>
    </>
  );
};

export default Rooms;
